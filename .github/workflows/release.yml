name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write # Grant write permissions for creating releases

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build binary
        run: deno compile --allow-all --unstable -o aq-${{ matrix.target }} --target ${{ matrix.target }} src/main.ts

      - name: Archive artifact
        run: zip aq-${{ matrix.target }}.zip aq-${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: aq-${{ matrix.target }}
          path: aq-${{ matrix.target }}.zip

  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build binary
        run: deno compile --allow-all --unstable -o aq-${{ matrix.target }} --target ${{ matrix.target }} src/main.ts

      - name: Archive artifact
        run: zip aq-${{ matrix.target }}.zip aq-${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: aq-${{ matrix.target }}
          path: aq-${{ matrix.target }}.zip

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build binary
        run: deno compile --allow-all --unstable -o aq-${{ matrix.target }} --target ${{ matrix.target }} src/main.ts

      - name: Archive artifact
        run: powershell Compress-Archive -Path aq-${{ matrix.target }}.exe -DestinationPath aq-${{ matrix.target }}.zip

      - uses: actions/upload-artifact@v4
        with:
          name: aq-${{ matrix.target }}
          path: aq-${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs:
      - build-linux
      - build-macos
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
          body: |
            ðŸš€ **Aq Release**
            This release includes precompiled binaries for the following platforms:
            - Linux (x86_64, ARM64)
            - macOS (x86_64, ARM64)
            - Windows (x86_64)
          draft: false
          prerelease: false